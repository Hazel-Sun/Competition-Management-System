00:19:45.147 [nacos-grpc-client-executor-13226] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Receive server push request, request = NotifySubscriberRequest, requestId = 370
00:19:45.201 [nacos-grpc-client-executor-13226] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Ack server push request, request = NotifySubscriberRequest, requestId = 370
00:20:00.696 [nacos-grpc-client-executor-13229] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Receive server push request, request = NotifySubscriberRequest, requestId = 374
00:20:00.697 [nacos-grpc-client-executor-13229] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Ack server push request, request = NotifySubscriberRequest, requestId = 374
00:22:14.831 [nacos-grpc-client-executor-13300] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Receive server push request, request = NotifySubscriberRequest, requestId = 379
00:22:14.833 [nacos-grpc-client-executor-13300] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Ack server push request, request = NotifySubscriberRequest, requestId = 379
00:22:22.323 [reactor-http-nio-8] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=88a7f81c686c, version=26, registration=Registration(name=cms-system, managementUrl=http://192.168.1.9:9201/actuator, healthUrl=http://192.168.1.9:9201/actuator/health, serviceUrl=http://192.168.1.9:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T14:53:11.776364Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9201/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9201/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9201/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.1.9:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.1.9:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.1.9:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
00:22:29.243 [nacos-grpc-client-executor-13302] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Receive server push request, request = NotifySubscriberRequest, requestId = 383
00:22:29.248 [nacos-grpc-client-executor-13302] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [7715261f-8301-46bf-98b4-10a3684559f2] Ack server push request, request = NotifySubscriberRequest, requestId = 383
00:22:44.090 [SpringApplicationShutdownHook] INFO  c.a.c.n.r.NacosServiceRegistry - [deregister,94] - De-registering from Nacos Server now...
00:22:44.095 [SpringApplicationShutdownHook] INFO  c.a.c.n.r.NacosServiceRegistry - [deregister,114] - De-registration finished.
00:22:44.423 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [shutdown,454] - Shutdown rpc client, set status to shutdown
00:22:44.423 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [shutdown,456] - Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@b6e61ff[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
00:22:44.424 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [closeConnection,591] - Close current connection 1682261572680_127.0.0.1_62109
00:22:44.429 [nacos-grpc-client-executor-13307] INFO  c.a.n.c.r.c.g.GrpcClient - [printIfInfoEnabled,60] - [1682261572680_127.0.0.1_62109]Ignore complete event,isRunning:false,isAbandon=false
00:22:44.440 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.c.g.GrpcClient - [shutdown,85] - Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@a948d46[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 13312]
00:22:48.112 [main] INFO  c.a.n.c.r.client - [lambda$createClient$0,80] - [RpcClientFactory] create a new rpc client of 2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0
00:22:48.156 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 26 ms to scan 1 urls, producing 3 keys and 6 values 
00:22:48.182 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 12 ms to scan 1 urls, producing 4 keys and 9 values 
00:22:48.195 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 11 ms to scan 1 urls, producing 3 keys and 10 values 
00:22:48.210 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 12 ms to scan 1 urls, producing 1 keys and 5 values 
00:22:48.223 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 11 ms to scan 1 urls, producing 1 keys and 7 values 
00:22:48.237 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 12 ms to scan 1 urls, producing 2 keys and 8 values 
00:22:48.240 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] RpcClient init label, labels = {module=config, Vipserver-Tag=null, source=sdk, Amory-Tag=null, Location-Tag=null, taskId=0, AppName=unknown}
00:22:48.240 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$458/0x0000000800edb188
00:22:48.241 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$459/0x0000000800edb3b0
00:22:48.241 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
00:22:48.241 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
00:22:48.248 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
00:22:48.902 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1682353368648_127.0.0.1_60274
00:22:48.903 [com.alibaba.nacos.client.remote.worker] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Notify connected event to listeners.
00:22:48.903 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
00:22:48.904 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [2b68c7c5-95de-4265-9c02-192560b9e4a7_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$470/0x0000000800fdb7b8
00:22:48.994 [main] INFO  c.c.m.m.RuoYiMonitorApplication - [logStartupProfileInfo,637] - The following 1 profile is active: "dev"
00:22:50.172 [main] INFO  o.a.c.h.Http11NioProtocol - [log,173] - Initializing ProtocolHandler ["http-nio-9100"]
00:22:50.173 [main] INFO  o.a.c.c.StandardService - [log,173] - Starting service [Tomcat]
00:22:50.173 [main] INFO  o.a.c.c.StandardEngine - [log,173] - Starting Servlet engine: [Apache Tomcat/9.0.70]
00:22:50.279 [main] INFO  o.a.c.c.C.[.[.[/] - [log,173] - Initializing Spring embedded WebApplicationContext
00:22:50.824 [main] INFO  c.a.c.s.SentinelWebMvcConfigurer - [addInterceptors,52] - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
00:22:51.625 [main] INFO  c.a.n.c.r.client - [lambda$createClient$0,80] - [RpcClientFactory] create a new rpc client of 696e74be-9347-4721-9534-9d318e254d7c
00:22:51.625 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] RpcClient init label, labels = {module=naming, source=sdk}
00:22:51.627 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
00:22:51.627 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
00:22:51.628 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
00:22:51.628 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
00:22:51.758 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1682353371641_127.0.0.1_60275
00:22:51.759 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
00:22:51.759 [com.alibaba.nacos.client.remote.worker] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Notify connected event to listeners.
00:22:51.759 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$470/0x0000000800fdb7b8
00:22:51.797 [main] INFO  o.a.c.h.Http11NioProtocol - [log,173] - Starting ProtocolHandler ["http-nio-9100"]
00:22:51.820 [main] INFO  c.a.c.n.r.NacosServiceRegistry - [register,75] - nacos registry, DEFAULT_GROUP cms-monitor 192.168.1.9:9100 register finished
00:22:52.048 [main] INFO  c.c.m.m.RuoYiMonitorApplication - [logStarted,61] - Started RuoYiMonitorApplication in 4.795 seconds (JVM running for 5.782)
00:22:52.057 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor.yml, group=DEFAULT_GROUP
00:22:52.057 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor, group=DEFAULT_GROUP
00:22:52.058 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor-dev.yml, group=DEFAULT_GROUP
00:22:52.329 [nacos-grpc-client-executor-36] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 389
00:22:52.332 [nacos-grpc-client-executor-36] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 389
00:22:52.405 [RMI TCP Connection(3)-192.168.1.9] INFO  o.a.c.c.C.[.[.[/] - [log,173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
00:22:52.418 [nacos-grpc-client-executor-37] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 390
00:22:52.419 [nacos-grpc-client-executor-37] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 390
00:22:52.436 [nacos-grpc-client-executor-38] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 391
00:22:52.439 [nacos-grpc-client-executor-38] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 391
00:22:52.534 [nacos-grpc-client-executor-41] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 392
00:22:52.535 [nacos-grpc-client-executor-41] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 392
00:22:52.556 [nacos-grpc-client-executor-42] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 393
00:22:52.557 [nacos-grpc-client-executor-42] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 393
00:22:52.586 [nacos-grpc-client-executor-43] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 394
00:22:52.587 [nacos-grpc-client-executor-43] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 394
00:22:52.615 [nacos-grpc-client-executor-44] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 395
00:22:52.616 [nacos-grpc-client-executor-44] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 395
00:22:52.654 [nacos-grpc-client-executor-45] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 396
00:22:52.656 [nacos-grpc-client-executor-45] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 396
12:33:18.039 [reactor-http-nio-5] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=9aebc4e48fb4, version=2, registration=Registration(name=cms-job, managementUrl=http://192.168.1.9:9203/actuator, healthUrl=http://192.168.1.9:9203/actuator/health, serviceUrl=http://192.168.1.9:9203, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128646Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9203/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9203/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9203/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9203/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9203/actuator/health), quartz=Endpoint(id=quartz, url=http://192.168.1.9:9203/actuator/quartz), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9203/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9203/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9203/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9203/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9203/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9203/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9203/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9203/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9203/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9203/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9203/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9203/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9203/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9203/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9203; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9203
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9203
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-3] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=c39b84d2f8f9, version=2, registration=Registration(name=cms-gen, managementUrl=http://192.168.1.9:9202/actuator, healthUrl=http://192.168.1.9:9202/actuator/health, serviceUrl=http://192.168.1.9:9202, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128646Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9202/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9202/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9202/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9202/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9202/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9202/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9202/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9202/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9202/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9202/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9202/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9202/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9202/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9202/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9202/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9202/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9202/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9202/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9202/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9202; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9202
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9202
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-1] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=2d61fd0cacb0, version=2, registration=Registration(name=cms-auth, managementUrl=http://192.168.1.9:9200/actuator, healthUrl=http://192.168.1.9:9200/actuator/health, serviceUrl=http://192.168.1.9:9200, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128646Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9200/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9200/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9200/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9200/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9200/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9200/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9200/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9200/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9200/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9200/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9200/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9200/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9200/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9200/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9200/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9200/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9200/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9200/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9200/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9200; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9200
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9200
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-2] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=04a8f693560c, version=2, registration=Registration(name=cms-monitor, managementUrl=http://192.168.1.9:9100/actuator, healthUrl=http://192.168.1.9:9100/actuator/health, serviceUrl=http://192.168.1.9:9100, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:23:22.188635Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9100/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9100/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9100/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9100/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9100/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9100/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9100/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9100/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9100/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9100/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9100/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9100/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9100/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9100/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9100/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9100/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9100/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9100/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9100/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9100; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9100
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9100
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-6] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=88a7f81c686c, version=2, registration=Registration(name=cms-system, managementUrl=http://192.168.1.9:9201/actuator, healthUrl=http://192.168.1.9:9201/actuator/health, serviceUrl=http://192.168.1.9:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.245892Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9201/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9201/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9201/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9201
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-8] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=b2e4c77606dd, version=2, registration=Registration(name=cms-competition, managementUrl=http://192.168.1.9:9205/actuator, healthUrl=http://192.168.1.9:9205/actuator/health, serviceUrl=http://192.168.1.9:9205, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128646Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9205/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9205/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9205/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9205/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9205/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9205/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9205/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9205/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9205/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9205/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9205/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9205/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9205/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9205/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9205/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9205/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9205/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9205/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9205/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9205; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9205
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9205
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
12:33:18.039 [reactor-http-nio-4] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=076a168de235, version=2, registration=Registration(name=cms-file, managementUrl=http://192.168.1.9:9300/actuator, healthUrl=http://192.168.1.9:9300/actuator/health, serviceUrl=http://192.168.1.9:9300, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128653Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:9300/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:9300/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:9300/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:9300/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:9300/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:9300/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:9300/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:9300/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:9300/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:9300/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:9300/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:9300/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:9300/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:9300/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:9300/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:9300/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:9300/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:9300/actuator/conditions), info=Endpoint(id=info, url=http://192.168.1.9:9300/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Network is unreachable: /192.168.1.9:9300; nested exception is io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9300
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:247)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedSocketException: Network is unreachable: /192.168.1.9:9300
Caused by: java.net.SocketException: Network is unreachable
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:583)
	at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:851)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:91)
	at io.netty.util.internal.SocketUtils$3.run(SocketUtils.java:88)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at io.netty.util.internal.SocketUtils.connect(SocketUtils.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:322)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:248)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1342)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:653)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect(CombinedChannelDuplexHandler.java:495)
	at io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:51)
	at io.netty.channel.CombinedChannelDuplexHandler.connect(CombinedChannelDuplexHandler.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:655)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:632)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:616)
	at io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:545)
	at io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:942)
	at io.netty.channel.AbstractChannel.connect(AbstractChannel.java:229)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$8(TransportConnector.java:240)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
13:19:45.083 [parallel-4] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=7124207cbdad, version=2, registration=Registration(name=cms-gateway, managementUrl=http://192.168.1.9:8080/actuator, healthUrl=http://192.168.1.9:8080/actuator/health, serviceUrl=http://192.168.1.9:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-24T16:22:52.128646Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://192.168.1.9:8080/actuator/sentinel), caches=Endpoint(id=caches, url=http://192.168.1.9:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.1.9:8080/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://192.168.1.9:8080/actuator/nacosconfig), health=Endpoint(id=health, url=http://192.168.1.9:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.1.9:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.1.9:8080/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://192.168.1.9:8080/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.1.9:8080/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.1.9:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.1.9:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.1.9:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.1.9:8080/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.1.9:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.1.9:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.1.9:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.1.9:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.1.9:8080/actuator/conditions), gateway=Endpoint(id=gateway, url=http://192.168.1.9:8080/actuator/gateway), info=Endpoint(id=info, url=http://192.168.1.9:8080/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:08:25.697 [nacos-grpc-client-executor-3276] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 399
16:08:25.716 [nacos-grpc-client-executor-3276] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 399
16:08:30.809 [nacos-grpc-client-executor-3277] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 400
16:08:30.810 [nacos-grpc-client-executor-3277] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 400
16:08:31.834 [nacos-grpc-client-executor-3279] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 401
16:08:31.836 [nacos-grpc-client-executor-3279] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 401
16:08:31.934 [nacos-grpc-client-executor-3280] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 402
16:08:31.935 [nacos-grpc-client-executor-3280] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 402
16:08:32.141 [nacos-grpc-client-executor-3281] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 403
16:08:32.143 [nacos-grpc-client-executor-3281] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 403
16:08:32.243 [nacos-grpc-client-executor-3282] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 404
16:08:32.244 [nacos-grpc-client-executor-3282] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 404
16:08:32.345 [nacos-grpc-client-executor-3283] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Receive server push request, request = NotifySubscriberRequest, requestId = 405
16:08:32.346 [nacos-grpc-client-executor-3283] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [696e74be-9347-4721-9534-9d318e254d7c] Ack server push request, request = NotifySubscriberRequest, requestId = 405
16:08:33.683 [SpringApplicationShutdownHook] INFO  c.a.c.n.r.NacosServiceRegistry - [deregister,94] - De-registering from Nacos Server now...
16:08:33.692 [SpringApplicationShutdownHook] INFO  c.a.c.n.r.NacosServiceRegistry - [deregister,114] - De-registration finished.
16:08:34.011 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [shutdown,454] - Shutdown rpc client, set status to shutdown
16:08:34.011 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [shutdown,456] - Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@6339e73e[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
16:08:34.012 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.client - [closeConnection,591] - Close current connection 1682353371641_127.0.0.1_60275
16:08:34.014 [nacos-grpc-client-executor-3286] INFO  c.a.n.c.r.c.g.GrpcClient - [printIfInfoEnabled,60] - [1682353371641_127.0.0.1_60275]Ignore complete event,isRunning:false,isAbandon=false
16:08:34.015 [SpringApplicationShutdownHook] INFO  c.a.n.c.r.c.g.GrpcClient - [shutdown,85] - Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@341b5dec[Running, pool size = 27, active threads = 0, queued tasks = 0, completed tasks = 3287]
16:10:15.613 [main] INFO  c.a.n.c.r.client - [lambda$createClient$0,80] - [RpcClientFactory] create a new rpc client of 917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0
16:10:15.676 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 42 ms to scan 1 urls, producing 3 keys and 6 values 
16:10:15.732 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 30 ms to scan 1 urls, producing 4 keys and 9 values 
16:10:15.759 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 21 ms to scan 1 urls, producing 3 keys and 10 values 
16:10:15.787 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 20 ms to scan 1 urls, producing 1 keys and 5 values 
16:10:15.812 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 20 ms to scan 1 urls, producing 1 keys and 7 values 
16:10:15.835 [main] INFO  o.r.Reflections - [scan,232] - Reflections took 19 ms to scan 1 urls, producing 2 keys and 8 values 
16:10:15.839 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] RpcClient init label, labels = {module=config, Vipserver-Tag=null, source=sdk, Amory-Tag=null, Location-Tag=null, taskId=0, AppName=unknown}
16:10:15.840 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$458/0x0000000800ebaa68
16:10:15.840 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$459/0x0000000800ebac90
16:10:15.841 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
16:10:15.841 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
16:10:15.854 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
16:10:16.530 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1682410216248_127.0.0.1_50953
16:10:16.531 [com.alibaba.nacos.client.remote.worker] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Notify connected event to listeners.
16:10:16.531 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
16:10:16.531 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [917782d1-0619-4d0d-8a3f-9c7a9a2c3e38_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$470/0x0000000800fbb7b8
16:10:16.606 [main] INFO  c.c.m.m.RuoYiMonitorApplication - [logStartupProfileInfo,637] - The following 1 profile is active: "dev"
16:10:18.473 [main] INFO  o.a.c.h.Http11NioProtocol - [log,173] - Initializing ProtocolHandler ["http-nio-9100"]
16:10:18.474 [main] INFO  o.a.c.c.StandardService - [log,173] - Starting service [Tomcat]
16:10:18.475 [main] INFO  o.a.c.c.StandardEngine - [log,173] - Starting Servlet engine: [Apache Tomcat/9.0.70]
16:10:18.689 [main] INFO  o.a.c.c.C.[.[.[/] - [log,173] - Initializing Spring embedded WebApplicationContext
16:10:20.044 [main] INFO  c.a.c.s.SentinelWebMvcConfigurer - [addInterceptors,52] - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
16:10:22.487 [main] INFO  c.a.n.c.r.client - [lambda$createClient$0,80] - [RpcClientFactory] create a new rpc client of 6c20bced-5415-4a8b-943e-0c8624924043
16:10:22.491 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] RpcClient init label, labels = {module=naming, source=sdk}
16:10:22.500 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
16:10:22.500 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
16:10:22.501 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
16:10:22.505 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
16:10:22.659 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1682410222526_127.0.0.1_50986
16:10:22.659 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
16:10:22.659 [com.alibaba.nacos.client.remote.worker] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Notify connected event to listeners.
16:10:22.659 [main] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$470/0x0000000800fbb7b8
16:10:22.727 [main] INFO  o.a.c.h.Http11NioProtocol - [log,173] - Starting ProtocolHandler ["http-nio-9100"]
16:10:22.776 [main] INFO  c.a.c.n.r.NacosServiceRegistry - [register,75] - nacos registry, DEFAULT_GROUP cms-monitor 10.110.28.53:9100 register finished
16:10:23.018 [main] INFO  c.c.m.m.RuoYiMonitorApplication - [logStarted,61] - Started RuoYiMonitorApplication in 8.627 seconds (JVM running for 9.376)
16:10:23.031 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor.yml, group=DEFAULT_GROUP
16:10:23.032 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor, group=DEFAULT_GROUP
16:10:23.033 [main] INFO  c.a.c.n.r.NacosContextRefresher - [registerNacosListener,129] - [Nacos Config] Listening config: dataId=cms-monitor-dev.yml, group=DEFAULT_GROUP
16:10:23.202 [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[.[.[/] - [log,173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
16:10:23.211 [nacos-grpc-client-executor-41] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 418
16:10:23.214 [nacos-grpc-client-executor-41] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 418
16:10:23.302 [nacos-grpc-client-executor-42] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 420
16:10:23.303 [nacos-grpc-client-executor-42] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 420
16:10:23.398 [nacos-grpc-client-executor-46] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 421
16:10:23.399 [nacos-grpc-client-executor-46] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 421
16:10:23.427 [nacos-grpc-client-executor-47] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 422
16:10:23.430 [nacos-grpc-client-executor-47] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 422
16:10:23.463 [nacos-grpc-client-executor-48] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 423
16:10:23.464 [nacos-grpc-client-executor-48] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 423
16:10:23.500 [nacos-grpc-client-executor-49] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 424
16:10:23.501 [nacos-grpc-client-executor-49] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 424
16:10:23.521 [nacos-grpc-client-executor-50] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 425
16:10:23.521 [nacos-grpc-client-executor-50] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 425
16:10:23.540 [nacos-grpc-client-executor-51] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 426
16:10:23.540 [nacos-grpc-client-executor-51] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 426
16:10:31.077 [nacos-grpc-client-executor-15] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 427
16:10:31.080 [nacos-grpc-client-executor-15] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 427
16:15:31.651 [parallel-1] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=20573d8f69a5, version=2, registration=Registration(name=cms-file, managementUrl=http://10.110.28.53:9300/actuator, healthUrl=http://10.110.28.53:9300/actuator/health, serviceUrl=http://10.110.28.53:9300, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:23.559931Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9300/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9300/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9300/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9300/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9300/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9300/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9300/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9300/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9300/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9300/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9300/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9300/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9300/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9300/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9300/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9300/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9300/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9300/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9300/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:31.651 [parallel-8] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=477df52af292, version=2, registration=Registration(name=cms-gen, managementUrl=http://10.110.28.53:9202/actuator, healthUrl=http://10.110.28.53:9202/actuator/health, serviceUrl=http://10.110.28.53:9202, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:23.498960Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9202/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9202/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9202/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9202/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9202/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9202/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9202/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9202/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9202/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9202/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9202/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9202/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9202/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9202/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9202/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9202/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9202/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9202/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9202/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:31.651 [parallel-2] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=be2fa20059ab, version=2, registration=Registration(name=cms-job, managementUrl=http://10.110.28.53:9203/actuator, healthUrl=http://10.110.28.53:9203/actuator/health, serviceUrl=http://10.110.28.53:9203, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:23.482948Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9203/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9203/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9203/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9203/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9203/actuator/health), quartz=Endpoint(id=quartz, url=http://10.110.28.53:9203/actuator/quartz), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9203/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9203/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9203/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9203/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9203/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9203/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9203/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9203/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9203/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9203/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9203/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9203/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9203/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9203/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:31.651 [parallel-7] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=d12f3184b1ff, version=2, registration=Registration(name=cms-auth, managementUrl=http://10.110.28.53:9200/actuator, healthUrl=http://10.110.28.53:9200/actuator/health, serviceUrl=http://10.110.28.53:9200, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:23.482871Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9200/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9200/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9200/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9200/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9200/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9200/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9200/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9200/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9200/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9200/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9200/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9200/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9200/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9200/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9200/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9200/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9200/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9200/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9200/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:31.651 [parallel-6] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=9c7121f56a4d, version=2, registration=Registration(name=cms-gateway, managementUrl=http://10.110.28.53:8080/actuator, healthUrl=http://10.110.28.53:8080/actuator/health, serviceUrl=http://10.110.28.53:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:23.483019Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:8080/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:8080/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:8080/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:8080/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:8080/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:8080/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:8080/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:8080/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:8080/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:8080/actuator/conditions), gateway=Endpoint(id=gateway, url=http://10.110.28.53:8080/actuator/gateway), info=Endpoint(id=info, url=http://10.110.28.53:8080/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:41.658 [parallel-3] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=bfa11534abc4, version=2, registration=Registration(name=cms-system, managementUrl=http://10.110.28.53:9201/actuator, healthUrl=http://10.110.28.53:9201/actuator/health, serviceUrl=http://10.110.28.53:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:53.345870Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9201/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9201/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9201/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:15:41.658 [parallel-4] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=cbbe288f6aee, version=2, registration=Registration(name=cms-monitor, managementUrl=http://10.110.28.53:9100/actuator, healthUrl=http://10.110.28.53:9100/actuator/health, serviceUrl=http://10.110.28.53:9100, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:10:53.295434Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.53:9100/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.53:9100/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.53:9100/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.53:9100/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.53:9100/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.53:9100/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.53:9100/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.53:9100/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.53:9100/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.53:9100/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.53:9100/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.53:9100/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.53:9100/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.53:9100/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.53:9100/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.53:9100/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.53:9100/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.53:9100/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.53:9100/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
16:17:24.914 [nacos-grpc-client-executor-256] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 432
16:17:24.917 [nacos-grpc-client-executor-256] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 432
16:17:37.902 [nacos-grpc-client-executor-260] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 435
16:17:37.904 [nacos-grpc-client-executor-260] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 435
16:17:53.200 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance 'bfa11534abc4' missing in DiscoveryClient services and will be removed.
16:26:39.849 [nacos-grpc-client-executor-486] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 439
16:26:39.856 [nacos-grpc-client-executor-486] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 439
16:26:52.813 [reactor-http-nio-8] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=149d57f19b69, version=2, registration=Registration(name=cms-system, managementUrl=http://127.0.0.1:9201/actuator, healthUrl=http://127.0.0.1:9201/actuator/health, serviceUrl=http://127.0.0.1:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:17:53.330305Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://127.0.0.1:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://127.0.0.1:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://127.0.0.1:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://127.0.0.1:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://127.0.0.1:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://127.0.0.1:9201/actuator/refresh), env=Endpoint(id=env, url=http://127.0.0.1:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://127.0.0.1:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://127.0.0.1:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://127.0.0.1:9201/actuator/heapdump), features=Endpoint(id=features, url=http://127.0.0.1:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://127.0.0.1:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://127.0.0.1:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://127.0.0.1:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://127.0.0.1:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://127.0.0.1:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://127.0.0.1:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://127.0.0.1:9201/actuator/conditions), info=Endpoint(id=info, url=http://127.0.0.1:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /127.0.0.1:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /127.0.0.1:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /127.0.0.1:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
16:26:53.991 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '149d57f19b69' missing in DiscoveryClient services and will be removed.
16:26:54.966 [nacos-grpc-client-executor-493] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 443
16:26:54.967 [nacos-grpc-client-executor-493] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 443
16:27:07.312 [nacos-grpc-client-executor-495] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 446
16:27:07.319 [nacos-grpc-client-executor-495] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 446
16:27:17.541 [nacos-grpc-client-executor-497] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 449
16:27:17.543 [nacos-grpc-client-executor-497] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 449
16:27:24.011 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '477df52af292' missing in DiscoveryClient services and will be removed.
16:30:58.624 [nacos-grpc-client-executor-587] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 453
16:30:58.625 [nacos-grpc-client-executor-587] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 453
16:31:03.144 [reactor-http-nio-2] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=6c3494939c0a, version=2, registration=Registration(name=cms-system, managementUrl=http://172.20.10.2:9201/actuator, healthUrl=http://172.20.10.2:9201/actuator/health, serviceUrl=http://172.20.10.2:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:27:24.048538Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://172.20.10.2:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://172.20.10.2:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://172.20.10.2:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://172.20.10.2:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://172.20.10.2:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://172.20.10.2:9201/actuator/refresh), env=Endpoint(id=env, url=http://172.20.10.2:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://172.20.10.2:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://172.20.10.2:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://172.20.10.2:9201/actuator/heapdump), features=Endpoint(id=features, url=http://172.20.10.2:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://172.20.10.2:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://172.20.10.2:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://172.20.10.2:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://172.20.10.2:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://172.20.10.2:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://172.20.10.2:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://172.20.10.2:9201/actuator/conditions), info=Endpoint(id=info, url=http://172.20.10.2:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /172.20.10.2:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /172.20.10.2:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /172.20.10.2:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
16:31:13.276 [nacos-grpc-client-executor-591] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 457
16:31:13.277 [nacos-grpc-client-executor-591] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 457
18:00:00.833 [parallel-8] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=6c3494939c0a, version=4, registration=Registration(name=cms-system, managementUrl=http://172.20.10.2:9201/actuator, healthUrl=http://172.20.10.2:9201/actuator/health, serviceUrl=http://172.20.10.2:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:31:13.394032Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://172.20.10.2:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://172.20.10.2:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://172.20.10.2:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://172.20.10.2:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://172.20.10.2:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://172.20.10.2:9201/actuator/refresh), env=Endpoint(id=env, url=http://172.20.10.2:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://172.20.10.2:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://172.20.10.2:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://172.20.10.2:9201/actuator/heapdump), features=Endpoint(id=features, url=http://172.20.10.2:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://172.20.10.2:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://172.20.10.2:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://172.20.10.2:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://172.20.10.2:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://172.20.10.2:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://172.20.10.2:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://172.20.10.2:9201/actuator/conditions), info=Endpoint(id=info, url=http://172.20.10.2:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
18:00:00.833 [parallel-7] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=ef17792e90ed, version=2, registration=Registration(name=cms-gen, managementUrl=http://172.20.10.2:9202/actuator, healthUrl=http://172.20.10.2:9202/actuator/health, serviceUrl=http://172.20.10.2:9202, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T08:27:24.059753Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://172.20.10.2:9202/actuator/sentinel), caches=Endpoint(id=caches, url=http://172.20.10.2:9202/actuator/caches), loggers=Endpoint(id=loggers, url=http://172.20.10.2:9202/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://172.20.10.2:9202/actuator/nacosconfig), health=Endpoint(id=health, url=http://172.20.10.2:9202/actuator/health), refresh=Endpoint(id=refresh, url=http://172.20.10.2:9202/actuator/refresh), env=Endpoint(id=env, url=http://172.20.10.2:9202/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://172.20.10.2:9202/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://172.20.10.2:9202/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://172.20.10.2:9202/actuator/heapdump), features=Endpoint(id=features, url=http://172.20.10.2:9202/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://172.20.10.2:9202/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://172.20.10.2:9202/actuator/mappings), beans=Endpoint(id=beans, url=http://172.20.10.2:9202/actuator/beans), configprops=Endpoint(id=configprops, url=http://172.20.10.2:9202/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://172.20.10.2:9202/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://172.20.10.2:9202/actuator/metrics), conditions=Endpoint(id=conditions, url=http://172.20.10.2:9202/actuator/conditions), info=Endpoint(id=info, url=http://172.20.10.2:9202/actuator/info)}), buildVersion=null, tags=Tags(values={}))
java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 10000ms in 'map' (and no fallback has been configured)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:295)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:280)
		at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:419)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:271)
		at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:286)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
		at java.base/java.lang.Thread.run(Thread.java:831)
20:01:09.062 [nacos-grpc-client-executor-4102] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 462
20:01:09.082 [nacos-grpc-client-executor-4102] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 462
20:01:32.304 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '6c3494939c0a' missing in DiscoveryClient services and will be removed.
20:06:28.235 [nacos-grpc-client-executor-4230] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 466
20:06:28.238 [nacos-grpc-client-executor-4230] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 466
20:20:42.474 [nacos-grpc-client-executor-4577] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 471
20:20:42.480 [nacos-grpc-client-executor-4577] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 471
20:20:47.807 [reactor-http-nio-4] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=05f9f1c88486, version=2, registration=Registration(name=cms-system, managementUrl=http://10.110.28.34:9201/actuator, healthUrl=http://10.110.28.34:9201/actuator/health, serviceUrl=http://10.110.28.34:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T12:06:32.636599Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.34:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.34:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.34:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.34:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.34:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.34:9201/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.34:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.34:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.34:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.34:9201/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.34:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.34:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.34:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.34:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.34:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.34:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.34:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.34:9201/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.34:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /10.110.28.34:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
20:20:57.289 [nacos-grpc-client-executor-4582] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 476
20:20:57.291 [nacos-grpc-client-executor-4582] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 476
20:47:25.730 [nacos-grpc-client-executor-5289] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 480
20:47:25.740 [nacos-grpc-client-executor-5289] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 480
20:47:33.218 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '05f9f1c88486' missing in DiscoveryClient services and will be removed.
20:47:40.733 [nacos-grpc-client-executor-5292] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 485
20:47:40.735 [nacos-grpc-client-executor-5292] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 485
21:02:08.501 [nacos-grpc-client-executor-5685] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 489
21:02:08.503 [nacos-grpc-client-executor-5685] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 489
21:02:17.825 [reactor-http-nio-5] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=05f9f1c88486, version=8, registration=Registration(name=cms-system, managementUrl=http://10.110.28.34:9201/actuator, healthUrl=http://10.110.28.34:9201/actuator/health, serviceUrl=http://10.110.28.34:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T12:48:03.369043Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.34:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.34:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.34:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.34:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.34:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.34:9201/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.34:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.34:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.34:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.34:9201/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.34:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.34:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.34:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.34:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.34:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.34:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.34:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.34:9201/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.34:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /10.110.28.34:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
21:02:24.860 [nacos-grpc-client-executor-5688] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 493
21:02:24.868 [nacos-grpc-client-executor-5688] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 493
21:34:20.846 [nacos-grpc-client-executor-6550] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 498
21:34:20.852 [nacos-grpc-client-executor-6550] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 498
21:34:34.073 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '05f9f1c88486' missing in DiscoveryClient services and will be removed.
21:34:34.701 [nacos-grpc-client-executor-6554] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 503
21:34:34.702 [nacos-grpc-client-executor-6554] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 503
21:36:51.422 [nacos-grpc-client-executor-6609] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 507
21:36:51.425 [nacos-grpc-client-executor-6609] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 507
21:36:57.830 [reactor-http-nio-7] INFO  d.c.b.a.s.s.StatusUpdater - [logError,130] - Couldn't retrieve status for Instance(id=05f9f1c88486, version=14, registration=Registration(name=cms-system, managementUrl=http://10.110.28.34:9201/actuator, healthUrl=http://10.110.28.34:9201/actuator/health, serviceUrl=http://10.110.28.34:9201, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2023-04-25T13:35:04.111359Z, info=Info(values={}), endpoints=Endpoints(endpoints={sentinel=Endpoint(id=sentinel, url=http://10.110.28.34:9201/actuator/sentinel), caches=Endpoint(id=caches, url=http://10.110.28.34:9201/actuator/caches), loggers=Endpoint(id=loggers, url=http://10.110.28.34:9201/actuator/loggers), nacosconfig=Endpoint(id=nacosconfig, url=http://10.110.28.34:9201/actuator/nacosconfig), health=Endpoint(id=health, url=http://10.110.28.34:9201/actuator/health), refresh=Endpoint(id=refresh, url=http://10.110.28.34:9201/actuator/refresh), env=Endpoint(id=env, url=http://10.110.28.34:9201/actuator/env), nacosdiscovery=Endpoint(id=nacosdiscovery, url=http://10.110.28.34:9201/actuator/nacosdiscovery), serviceregistry=Endpoint(id=serviceregistry, url=http://10.110.28.34:9201/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://10.110.28.34:9201/actuator/heapdump), features=Endpoint(id=features, url=http://10.110.28.34:9201/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://10.110.28.34:9201/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://10.110.28.34:9201/actuator/mappings), beans=Endpoint(id=beans, url=http://10.110.28.34:9201/actuator/beans), configprops=Endpoint(id=configprops, url=http://10.110.28.34:9201/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://10.110.28.34:9201/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://10.110.28.34:9201/actuator/metrics), conditions=Endpoint(id=conditions, url=http://10.110.28.34:9201/actuator/conditions), info=Endpoint(id=info, url=http://10.110.28.34:9201/actuator/info)}), buildVersion=null, tags=Tags(values={}))
org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /10.110.28.34:9201; nested exception is io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
		at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /10.110.28.34:9201
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:944)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:831)
21:37:04.116 [Nacos-Watch-Task-Scheduler-1] INFO  d.c.b.a.s.c.d.InstanceDiscoveryListener - [lambda$removeStaleInstances$4,138] - Instance '05f9f1c88486' missing in DiscoveryClient services and will be removed.
21:37:04.969 [nacos-grpc-client-executor-6627] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Receive server push request, request = NotifySubscriberRequest, requestId = 511
21:37:04.970 [nacos-grpc-client-executor-6627] INFO  c.a.n.c.r.client - [printIfInfoEnabled,60] - [6c20bced-5415-4a8b-943e-0c8624924043] Ack server push request, request = NotifySubscriberRequest, requestId = 511
